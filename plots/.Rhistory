aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
breaks
format_labels(0)
format_labels(1)
format_labels(breaks)
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
# trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
breaks = c(0:(max(timings_long[variable == "Runtime [seconds]"]$value + 1)),
min(timings_long[variable == "Runtime [seconds]"]$value + 1)
)
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
breaks = c(0:(max(timings_long[variable == "Runtime [seconds]"]$value + 1)),
min(timings_long[variable == "Runtime [seconds]"]$value)
)
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
timings_long
p1 = ggplot(timings_long[variable == "RAM usage [GB]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2 = ggplot(timings_long[variable == "RAM usage [GB]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
p = cowplot::plot_grid(plotlist = list(p1, p2), labels = "A")
p
lgd = get_legend(p1)
p = cowplot::plot_grid(plotlist = list(p1 + theme(legend.position = "none"), p2), labels = "A")
p
p = plot_grid(plotlist = list(
p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
lgd),
nrows = 2, ncols = 2, rel_heigth = c(.9, .1),
labels = "A"
)
packages = c(
"data.table",
"ggplot2",
"stringr",
"parallel",
"ggpubr",
"gridExtra",
"cowplot"
)
out = suppressPackageStartupMessages(sapply(packages, library, character.only=T))
p = plot_grid(plotlist = list(
p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
lgd),
nrows = 2, ncols = 2, rel_heigth = c(.9, .1),
labels = "A"
)
p
lgd = get_legend(p1)
p = plot_grid(plotlist = list(
p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
lgd),
nrows = 2, ncols = 2, rel_heigth = c(.9, .1),
labels = "A"
)
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
p2 = ggplot(timings_long[variable == "RAM usage [GB]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
lgd = get_legend(p1)
p = plot_grid(plotlist = list(
p1 + theme(legend.position = "none"),
p2 + theme(legend.position = "none"),
lgd),
nrows = 2, ncols = 2, rel_heigth = c(.9, .1),
labels = "A"
)
p1 + theme(legend.position = "none")
p2 + theme(legend.position = "none")
lgd
p = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None"),
lgd),
nrows = 2, ncols = 2, rel_heigth = c(.9, .1),
labels = "A"
)
upper = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")),
ncols = 2, labels = "A"
)
upper
upper = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")),
ncols = 2, labels = "A", nrows = 1
)
upper
upper = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")
),
ncols = 2, labels = "A", nrows = 1
)
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")
),
ncols = 2, labels = "A", nrows = 1
)
upper = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")
),
ncols = 2, labels = c("A", ""), nrows = 1
)
p
p1 = ggplot(timings_long[variable == "Runtime [seconds]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("Runtime [hh : mm]")+
xlab("CPU cores")+
scale_y_continuous(
trans = "log1p",
breaks = breaks,
labels= format_labels(breaks))+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p1
p2 = ggplot(timings_long[variable == "RAM usage [GB]"],
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
lgd = get_legend(p1)
upper = plot_grid(plotlist = list(
p1 + theme(legend.position = "None"),
p2 + theme(legend.position = "None")
),
ncols = 2, labels = c("A", ""), nrows = 1
)
upper
upper = plot_grid(plotlist = list(
p1,
p2
),
ncols = 2, labels = c("A", ""), nrows = 1
)
upper
upper = cowplot::plot_grid(plotlist = list(
p1,
p2
),
ncols = 2, labels = c("A", ""), nrows = 1
)
upper
p1
p2
p2
p1
p2
cowplot::plot_grid(plotlist = list(p1, p2))
cowplot::plot_grid(plotlist = list(p1 + theme(legend.position = "None"), p2))
cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")))
cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1), nrows = 2)
lgd = cowplot::get_legend(p1)
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1), nrows = 2)
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1), nrows = 2)
lgd = cowplot::get_legend(p1)
logd
lgd
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1), nrows = 2)
upper
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1), nrows = 2)
upper
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upper
upper = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1),
nrows = 2, ncols = 1)
upper
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upperTotal = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1),
nrows = 2, ncols = 1)
upperTotal
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upperTotal = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1),
nrows = 2, ncols = 1)
upperTotal
upper
upperTotal = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1),
nrow = 2, ncols = 1)
upperTotal
upper = cowplot::plot_grid(plotlist = list(
p1 + theme(legend.position = "None"), p2+ theme(legend.position = "None")),
labels = "A")
upperTotal = cowplot::plot_grid(plotlist = list(upper, lgd), rel_heights = c(.9, .1),
nrow = 2, ncol = 1)
upperTotal
ram_usage = fread("../benchmarks/out.txt")
ram_usage
colnames(ram_usage) = c("job", "start", "method", "state", "ram", "time")
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "start", "method", "state", "ram", "time")
ram_usage
ram_usage = ram_usage[state == "COMPLETED"]
ram_usage
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "start", "method", "state", "ram", "time", "nodes", "cores_per_node")
ram_usage
ram_usage[, ncores := as.numeric(nodes) * as.numeric(cores_per_node)]
ram_usage = ram_usage[state == "COMPLETED"]
ram_usage
ram_usage = fread("../benchmarks/tomograms.txt")
ram_usage
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "state", "ram", "time", "method", "start", "nodes", "cores_per_node")
ram_usage[, ncores := as.numeric(nodes) * as.numeric(cores_per_node)]
ram_usage = ram_usage[state == "COMPLETED"]
ram_usage
ram_usage[, ram_float := gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\1", ram)]
ram_usage
ram_usage$cores_per_node = NULL
ram_usage$nodes = NULL
ram_usage
ram_usage$start = NULL
ram_usage
ram_usage[, ram_unit := gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\2", ram)]
ram_usage
1e9
1e3/1000
ram_usage[ram_unit == "GB", ram_float := ram_float * 1e9]
ram_usage[ram_unit == "MB", ram_float := ram_float * 1e6]
ram_usage[ram_unit == "KB", ram_float := ram_float * 1e3]
ram_usage
ram_usage$ram_unit
ram_usage[, ram_unit := trimws(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\2", ram))]
ram_usage[ram_unit == "GB", ram_float := ram_float * 1e9]
ram_usage[ram_unit == "MB", ram_float := ram_float * 1e6]
ram_usage[ram_unit == "KB", ram_float := ram_float * 1e3]
ram_float
ram_usage
ram_usage$ram_float
ram_usage[, ram_float := as.numeric(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\1", ram))]
ram_usage[ram_unit == "GB", ram_float := ram_float * 1e9]
ram_usage[ram_unit == "MB", ram_float := ram_float * 1e6]
ram_usage[ram_unit == "KB", ram_float := ram_float * 1e3]
ram_usage
ram_usage[, ram_gb := ram_float / 1e9]
ram_usage
p2 = ggplot(ram_usage,
aes(x = ncores, y = value, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
p2 = ggplot(ram_usage,
aes(x = ncores, y = ram_float, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
p2 = ggplot(ram_usage,
aes(x = ncores, y = ram_gb, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
ram_usage
method_colors
ram_usage = ram_usage[method %in% c("PyTom", "ourTomo", "STOPGAP")]
ram_usage[method == "ourTomo", method := "Ours"]
p2 = ggplot(ram_usage,
aes(x = ncores, y = ram_gb, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
ram_usage
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "state", "ram", "time", "method", "start", "nodes", "cores_per_node")
ram_usage[, ncores := as.numeric(nodes) * as.numeric(cores_per_node)]
ram_usage = ram_usage[state == "COMPLETED"]
ram_usage$nodes = NULL
ram_usage$cores_per_node = NULL
# ram_usage$start = NULL
ram_usage[, ram_float := as.numeric(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\1", ram))]
ram_usage[, ram_unit := trimws(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\2", ram))]
ram_usage[ram_unit == "GB", ram_float := ram_float * 1e9]
ram_usage[ram_unit == "MB", ram_float := ram_float * 1e6]
ram_usage[ram_unit == "KB", ram_float := ram_float * 1e3]
ram_usage[, ram_gb := ram_float / 1e9]
ram_usage = ram_usage[method %in% c("PyTom", "ourTomo", "STOPGAP")]
ram_usage[method == "ourTomo", method := "Ours"]
ram_usage
p1
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "state", "ram", "time", "method", "start", "nodes", "cores_per_node")
ram_usage
ram_usage = fread("../benchmarks/tomograms.txt")
colnames(ram_usage) = c("job", "state", "ram", "time", "method", "start", "nodes", "cores_per_node")
ram_usage[, ncores := as.numeric(nodes) * as.numeric(cores_per_node)]
ram_usage = ram_usage[state == "COMPLETED"]
ram_usage$nodes = NULL
ram_usage$cores_per_node = NULL
# ram_usage$start = NULL
ram_usage[, ram_float := as.numeric(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\1", ram))]
ram_usage[, ram_unit := trimws(gsub(pattern = "([0-9\\.]+)(.*)", replacement = "\\2", ram))]
ram_usage[ram_unit == "GB", ram_float := ram_float * 1e9]
ram_usage[ram_unit == "MB", ram_float := ram_float * 1e6]
ram_usage[ram_unit == "KB", ram_float := ram_float * 1e3]
ram_usage[, ram_gb := ram_float / 1e9]
ram_usage = ram_usage[method %in% c("PyTom", "ourTomo", "STOPGAP")]
ram_usage[method == "ourTomo", method := "Ours"]
p2 = ggplot(ram_usage,
aes(x = ncores, y = ram_gb, color = method, group = method))+
geom_point(size = 2)+
geom_line()+
theme_bw(base_size = 14)+
scale_color_manual(name = "Method", values = method_colors)+
ylab("RAM usage [GB]")+
xlab("CPU cores")+
scale_x_continuous(breaks = sort(unique(timings_long$ncores)), trans = "log2")+
# scale_y_continuous(trans = "log1p")+
theme(legend.position = "bottom")
p2
ram_usage[ncores == 16]
ram_usage[method == "PyTom"]
ram_usage[method == "PyTom"][order(nores)]
ram_usage[method == "PyTom"][order(ncores)]
ram_usage[method == "Ours"][order(ncores)]
timings_long[variable == "RAM usage [GB]"]
timings_long[variable == "RAM usage [GB]"][method == "ours"]
timings_long[variable == "RAM usage [GB]"][method == "Ours"]
timings_long[variable == "RAM usage [GB]"][method == "Ours"][order(ncores)]
library(RSQLite)
library(data.table)
library(ggplot2)
library(RColorBrewer)
color = colorRampPalette(c("#00627B", "#FFFFFF","#BE3108"))(100)
suppressPackageStartupMessages(library(cowplot))
sqlite <- dbDriver("SQLite")
conn <- dbConnect(sqlite,"/Users/vmaurer/src/finance/financial.db")
res = dbReadTable(conn, "data")
dbDisconnect(conn)
library(RSQLite)
library(data.table)
library(ggplot2)
library(RColorBrewer)
